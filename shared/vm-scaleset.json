{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "targetEnvironment": {
      "type": "string",
      "allowedValues": [ "individual", "dev", "ppe", "prod" ],
      "defaultValue": "dev",
      "metadata": {
        "description": "String to determine which environment the ARM is targeting."
      }
    },
    "clusterName": {
      "type": "string",
      "metadata": {
        "description": "Name of the cluster."
      }
    },
    "clusterEndpoint": {
      "type": "string",
      "metadata": {
        "description": "Endpoint of the cluster."
      }
    },
    "dnsName": {
      "type": "string",
      "metadata": {
        "description": "Name of the dns."
      }
    },
    "nodeTypeName": {
      "type": "string",
      "metadata": {
        "description": "Name of node type."
      }
    },
    "subnetName": {
      "type": "string",
      "metadata": {
        "description": "Name of subnet."
      }
    },
    "subnetAddressPrefix": {
      "type": "string",
      "metadata": {
        "description": "Address prefix of subnet."
      }
    },
    "storageAccounts": {
      "type": "array",
      "metadata": {
        "description": "Names of storage account for each node"
      }
    },
    "storageAccountLog": {
      "type": "string",
      "metadata": {
        "description": "Name of storage account for service fabric logging"
      }
    },
    "keyVaultName": {
      "type": "string",
      "metadata": {
        "description": "name of key vault name"
      }
    },
    "certificateThumbprint": {
      "type": "string",
      "metadata": {
        "description": "thumbprint of certificate to be used for cluster nodes"
      }
    },
    "sourceVaultValue": {
      "type": "string",
      "metadata": {
        "description": "Resource Id of the key vault, is should be in the format of /subscriptions/<Sub ID>/resourceGroups/<Resource group name>/providers/Microsoft.KeyVault/vaults/<vault name>"
      }
    },
    "certificateUrlValue": {
      "type": "string",
      "metadata": {
        "description": "Refers to the location URL in your key vault where the certificate was uploaded, it is should be in the format of https://<name of the vault>.vault.azure.net:443/secrets/<exact location>"
      }
    },
    "adminUserName": {
      "type": "string",
      "defaultValue": "testadm",
      "metadata": {
        "description": "Remote desktop user Id"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Remote desktop user password. Must be a strong password"
      }
    },
    "nicName": {
      "type": "string",
      "defaultValue": "NIC",
      "metadata": {
        "description": "name of network interface"
      }
    },
    "vNetName": {
      "type": "string",
      "defaultValue": "VNet",
      "metadata": {
        "description": "Instance count for node type"
      }
    },
    "vmImagePublisher": {
      "type": "string",
      "defaultValue": "MicrosoftWindowsServer",
      "metadata": {
        "description": "VM image Publisher"
      }
    },
    "vmImageOffer": {
      "type": "string",
      "defaultValue": "WindowsServer",
      "metadata": {
        "description": "VM image offer"
      }
    },
    "vmImageSku": {
      "type": "string",
      "defaultValue": "2012-R2-Datacenter",
      "metadata": {
        "description": "VM image SKU"
      }
    },
    "vmImageVersion": {
      "type": "string",
      "defaultValue": "latest",
      "metadata": {
        "description": "VM image version"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_D2_V2",
      "metadata": {
        "description": "VM size"
      }
    },

    "instanceCount": {
      "type": "int",
      "defaultValue": 5,
      "metadata": {
        "description": "Instance count for node type"
      }
    }
  },
  "variables": {
    "lbID": "[resourceId('Microsoft.Network/loadBalancers',concat('LB', '-', parameters('clusterName'), '-', parameters('nodeTypeName')))]",
    "lbIPConfig": "[concat(variables('lbID'),'/frontendIPConfigurations/LoadBalancerIPConfig')]",
    "lbPoolID": "[concat(variables('lbID'),'/backendAddressPools/LoadBalancerBEAddressPool')]",
    "lbProbeID": "[concat(variables('lbID'),'/probes/FabricGatewayProbe')]",
    "lbHttpProbeID": "[concat(variables('lbID'),'/probes/FabricHttpGatewayProbe')]",
    "lbNatPoolID": "[concat(variables('lbID'),'/inboundNatPools/LoadBalancerBEAddressNatPool')]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',parameters('vNetName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/', parameters('subnetName'))]",
    "vmStorageAccountContainerName": "vhds",
    "storageApiVersion": "2016-01-01"
  },
  "resources": [
    {
      "apiVersion": "2016-04-30-preview",
      "type": "Microsoft.Compute/virtualMachineScaleSets",
      "name": "[parameters('nodeTypeName')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "[parameters('vmSize')]",
        "capacity": "[parameters('instanceCount')]",
        "tier": "Standard"
      },
      "properties": {
        "overprovision": false,
        "singlePlacementGroup": true,
        "upgradePolicy": {
          "mode": "Automatic"
        },
        "virtualMachineProfile": {
          "osProfile": {
            "computernamePrefix": "[parameters('nodeTypeName')]",
            "adminUsername": "[parameters('adminUsername')]",
            "windowsConfiguration": {
              "provisionVMAgent": true,
              "enableAutomaticUpdates": true
            },
            "secrets": [
              {
                "sourceVault": {
                  "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/keyvaults/providers/Microsoft.KeyVault/vaults/', parameters('keyVaultName'))]"
                },
                "vaultCertificates": [
                  {
                    "certificateStore": "My",
                    "certificateUrl": "[parameters('certificateUrlValue')]"
                  }
                ]
              }
            ]
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "[parameters('vmImagePublisher')]",
              "offer": "[parameters('vmImageOffer')]",
              "sku": "[parameters('vmImageSku')]",
              "version": "[parameters('vmImageVersion')]"
            },
            "osDisk": {
              "vhdContainers": [
                "[concat('https://', parameters('storageAccounts')[0], '.blob.core.windows.net/', variables('vmStorageAccountContainerName'))]",
                "[concat('https://', parameters('storageAccounts')[1], '.blob.core.windows.net/', variables('vmStorageAccountContainerName'))]",
                "[concat('https://', parameters('storageAccounts')[2], '.blob.core.windows.net/', variables('vmStorageAccountContainerName'))]",
                "[concat('https://', parameters('storageAccounts')[3], '.blob.core.windows.net/', variables('vmStorageAccountContainerName'))]",
                "[concat('https://', parameters('storageAccounts')[4], '.blob.core.windows.net/', variables('vmStorageAccountContainerName'))]"
              ],
              "name": "vmssosdisk",
              "caching": "ReadOnly",
              "createOption": "FromImage"
            }
          },
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "[concat(parameters('nicName'), '-0')]",
                "properties": {
                  "ipConfigurations": [
                    {
                      "name": "[concat(parameters('nicName'), '-', 0)]",
                      "properties": {
                        "loadBalancerBackendAddressPools": [
                          {
                            "id": "[variables('lbPoolID')]"
                          }
                        ],
                        "loadBalancerInboundNatPools": [
                          {
                            "id": "[variables('lbNatPoolID')]"
                          }
                        ],
                        "subnet": {
                          "id": "[variables('subnetRef')]"
                        }
                      }
                    }
                  ],
                  "primary": true
                }
              }
            ]
          },
          "extensionProfile": {
            "extensions": [
              {
                "name": "[concat('ServiceFabricNodeVmExt', parameters('nodeTypeName'))]",
                "properties": {
                  "publisher": "Microsoft.Azure.ServiceFabric",
                  "type": "ServiceFabricNode",
                  "typeHandlerVersion": "1.0",
                  "autoUpgradeMinorVersion": true,
                  "settings": {
                    "clusterEndpoint": "[parameters('clusterEndpoint')]",
                    "nodeTypeRef": "[parameters('nodeTypeName')]",
                    "dataPath": "D:\\SvcFab",
                    "durabilityLevel": "Bronze",
                    "enableParallelJobs": true,
                    "nicPrefixOverride": "[parameters('subnetAddressPrefix')]",
                    "certificate": {
                      "thumbprint": "[parameters('certificateThumbprint')]",
                      "x509StoreName": "My"
                    }
                  }
                }
              },
              {
                "name": "[concat('VMDiagnosticsVmExt_', parameters('nodeTypeName'))]",
                "properties": {
                  "publisher": "Microsoft.Azure.Diagnostics",
                  "type": "IaaSDiagnostics",
                  "typeHandlerVersion": "1.5",
                  "autoUpgradeMinorVersion": true,
                  "settings": {
                    "WadCfg": {
                      "DiagnosticMonitorConfiguration": {
                        "overallQuotaInMB": "50000",
                        "EtwProviders": {
                          "EtwEventSourceProviderConfiguration": [
                            {
                              "provider": "Microsoft-ServiceFabric-Actors",
                              "scheduledTransferKeywordFilter": "1",
                              "scheduledTransferPeriod": "PT5M",
                              "DefaultEvents": {
                                "eventDestination": "ServiceFabricReliableActorEventTable"
                              }
                            },
                            {
                              "provider": "Microsoft-ServiceFabric-Services",
                              "scheduledTransferPeriod": "PT5M",
                              "DefaultEvents": {
                                "eventDestination": "ServiceFabricReliableServiceEventTable"
                              }
                            }
                          ],
                          "EtwManifestProviderConfiguration": [
                            {
                              "provider": "cbd93bc2-71e5-4566-b3a7-595d8eeca6e8",
                              "scheduledTransferLogLevelFilter": "Information",
                              "scheduledTransferKeywordFilter": "4611686018427387904",
                              "scheduledTransferPeriod": "PT5M",
                              "DefaultEvents": {
                                "eventDestination": "ServiceFabricSystemEventTable"
                              }
                            }
                          ]
                        }
                      }
                    },
                    "StorageAccount": "[parameters('storageAccountLog')]"
                  }
                }
              }
            ]
          }
        }
      },

      "tags": {
        "resourceType": "Service Fabric",
        "clusterName": "[parameters('clusterName')]"
      }
    }
  ],
  "outputs": {

  }
}